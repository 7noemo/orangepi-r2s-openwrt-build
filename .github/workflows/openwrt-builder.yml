#
# https://github.com/P3TERX/Actions-OpenWrt
#
# File: .github/workflows/openwrt-bulder.yml
# Description: Build OpenWrt using GitHub Actions
#
# Copyright (c) 2019-2024 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#

name: OpenWrt Builder

on:
  repository_dispatch:
  workflow_dispatch:

# 添加全局权限声明
permissions:
  contents: write  # 允许创建Release
  actions: write   # 允许删除Workflow Runs

env:
  REPO_URL: https://github.com/openwrt/openwrt
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  # 添加固件输出目录变量
  FIRMWARE_OUTPUT: openwrt/bin/targets/*/*

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v4  # 升级到稳定版本

    # ... 其他步骤保持不变 ...

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd ${{ env.FIRMWARE_OUTPUT }}
        # 创建固件专用目录
        mkdir -p $GITHUB_WORKSPACE/artifacts/firmware
        # 复制固件并保留路径结构
        find . -type f $$ -name "*.img" -o -name "*.gz" -o -name "*.zip" $$ \
          -exec cp --parents {} $GITHUB_WORKSPACE/artifacts/firmware \;
        echo "FIRMWARE_PATH=$GITHUB_WORKSPACE/artifacts/firmware" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    # 添加文件验证步骤
    - name: Verify firmware files
      if: steps.organize.outputs.status == 'success' && !cancelled()
      run: |
        echo "固件目录内容:"
        ls -lhR ${{ env.FIRMWARE_PATH }}
        # 检查是否存在固件文件
        if [ $(find ${{ env.FIRMWARE_PATH }} -type f | wc -l) -eq 0 ]; then
          echo "::error::未找到固件文件!"
          exit 1
        fi

    - name: Generate release tag and notes
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "release_tag=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT
        # 创建详细的Release说明
        cat << EOF > release.md
        ### OrangePi R2S 固件自动构建
        **构建日期:** $(date)
        **设备名称:** ${DEVICE_NAME:-Unknown}
        **包含文件:**
        $(cd ${{ env.FIRMWARE_PATH }} && find . -type f | sed 's/^/- /')
        EOF
        echo "status=success" >> $GITHUB_OUTPUT

    # 修改上传步骤 - 使用社区维护的更稳定的版本
    - name: Upload firmware to release
      uses: ncipollo/release-action@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      with:
        tag: ${{ steps.tag.outputs.release_tag }}
        name: OrangePi R2S Build ${{ steps.tag.outputs.release_tag }}
        bodyFile: release.md
        artifacts: ${{ env.FIRMWARE_PATH }}/**
        token: ${{ secrets.GITHUB_TOKEN }}
        # 允许更新同名Release
        allowUpdates: true

    # 删除旧Release - 使用维护更活跃的Action
    - name: Remove old Releases
      uses: yyakubovich/clean-old-releases@v1
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        # 保留最新的3个Release
        keepLatest: 3
        token: ${{ secrets.GITHUB_TOKEN }}

    # 删除旧Workflow Runs - 使用维护更活跃的Action
    - name: Delete old workflow runs
      uses: rokroskar/workflow-run-cleaner-action@v1
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        # 保留最近的5次运行
        keepLast: 5
        # 匹配当前Workflow
        workflowFileName: 'openwrt-bulder.yml'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
